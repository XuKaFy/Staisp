#pragma once

#include <unordered_map>
#include <string_view>

enum class Reg {
    ZERO,
    RA,
    SP,
    GP,
    TP,
    T0,
    T1,
    T2,
    S0,
    FP,
    S1,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    A6,
    A7,
    S2,
    S3,
    S4,
    S5,
    S6,
    S7,
    S8,
    S9,
    S10,
    S11,
    T3,
    T4,
    T5,
    T6,
    FT0,
    FT1,
    FT2,
    FT3,
    FT4,
    FT5,
    FT6,
    FT7,
    FS0,
    FS1,
    FA0,
    FA1,
    FA2,
    FA3,
    FA4,
    FA5,
    FA6,
    FA7,
    FS2,
    FS3,
    FS4,
    FS5,
    FS6,
    FS7,
    FS8,
    FS9,
    FS10,
    FS11,
    FT8,
    FT9,
    FT10,
    FT11,
};

inline constexpr std::string_view REG_NAME[] = {
    "zero",
    "ra",
    "sp",
    "gp",
    "tp",
    "t0",
    "t1",
    "t2",
    "s0",
    "fp",
    "s1",
    "a0",
    "a1",
    "a2",
    "a3",
    "a4",
    "a5",
    "a6",
    "a7",
    "s2",
    "s3",
    "s4",
    "s5",
    "s6",
    "s7",
    "s8",
    "s9",
    "s10",
    "s11",
    "t3",
    "t4",
    "t5",
    "t6",
    "ft0",
    "ft1",
    "ft2",
    "ft3",
    "ft4",
    "ft5",
    "ft6",
    "ft7",
    "fs0",
    "fs1",
    "fa0",
    "fa1",
    "fa2",
    "fa3",
    "fa4",
    "fa5",
    "fa6",
    "fa7",
    "fs2",
    "fs3",
    "fs4",
    "fs5",
    "fs6",
    "fs7",
    "fs8",
    "fs9",
    "fs10",
    "fs11",
    "ft8",
    "ft9",
    "ft10",
    "ft11",
};

inline const std::unordered_map<std::string_view, Reg> REGS {
    {"zero", Reg::ZERO},
    {"ra", Reg::RA},
    {"sp", Reg::SP},
    {"gp", Reg::GP},
    {"tp", Reg::TP},
    {"t0", Reg::T0},
    {"t1", Reg::T1},
    {"t2", Reg::T2},
    {"s0", Reg::S0},
    {"fp", Reg::FP},
    {"s1", Reg::S1},
    {"a0", Reg::A0},
    {"a1", Reg::A1},
    {"a2", Reg::A2},
    {"a3", Reg::A3},
    {"a4", Reg::A4},
    {"a5", Reg::A5},
    {"a6", Reg::A6},
    {"a7", Reg::A7},
    {"s2", Reg::S2},
    {"s3", Reg::S3},
    {"s4", Reg::S4},
    {"s5", Reg::S5},
    {"s6", Reg::S6},
    {"s7", Reg::S7},
    {"s8", Reg::S8},
    {"s9", Reg::S9},
    {"s10", Reg::S10},
    {"s11", Reg::S11},
    {"t3", Reg::T3},
    {"t4", Reg::T4},
    {"t5", Reg::T5},
    {"t6", Reg::T6},
    {"ft0", Reg::FT0},
    {"ft1", Reg::FT1},
    {"ft2", Reg::FT2},
    {"ft3", Reg::FT3},
    {"ft4", Reg::FT4},
    {"ft5", Reg::FT5},
    {"ft6", Reg::FT6},
    {"ft7", Reg::FT7},
    {"fs0", Reg::FS0},
    {"fs1", Reg::FS1},
    {"fa0", Reg::FA0},
    {"fa1", Reg::FA1},
    {"fa2", Reg::FA2},
    {"fa3", Reg::FA3},
    {"fa4", Reg::FA4},
    {"fa5", Reg::FA5},
    {"fa6", Reg::FA6},
    {"fa7", Reg::FA7},
    {"fs2", Reg::FS2},
    {"fs3", Reg::FS3},
    {"fs4", Reg::FS4},
    {"fs5", Reg::FS5},
    {"fs6", Reg::FS6},
    {"fs7", Reg::FS7},
    {"fs8", Reg::FS8},
    {"fs9", Reg::FS9},
    {"fs10", Reg::FS10},
    {"fs11", Reg::FS11},
    {"ft8", Reg::FT8},
    {"ft9", Reg::FT9},
    {"ft10", Reg::FT10},
    {"ft11", Reg::FT11},
};
